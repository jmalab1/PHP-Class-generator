<?phpclass Jobs_assignment {	private $job_id = null;	private $employee_id = null;	private $assignment_date = null;	public function set_job_id($job_id) {		$this->job_id = $job_id;	}	public function get_job_id() {		return $this->job_id;	}	public function set_employee_id($employee_id) {		$this->employee_id = $employee_id;	}	public function get_employee_id() {		return $this->employee_id;	}	public function set_assignment_date($assignment_date) {		$this->assignment_date = $assignment_date;	}	public function get_assignment_date() {		return $this->assignment_date;	}	public static function lookup($dbh, $where = 1, $params = array()) {		$sql = "SELECT job_id, employee_id, assignment_date FROM jobs_assignment WHERE $where";		$stmt = $dbh->prepare($sql);		$stmt->execute($params);		$results = $stmt->fetchAll(PDO::FETCH_CLASS, 'jobs_assignment');		return $results;	}	public static function populate($job_id = null, $employee_id = null, $assignment_date = null) {		$item = new jobs_assignment();		$item->set_job_id($job_id);		$item->set_employee_id($employee_id);		$item->set_assignment_date($assignment_date);		return $item;	}	public function write($dbh) {		$params = array(			$this->get_job_id(),			$this->get_employee_id(),			$this->get_assignment_date(),		);		if (!$this->job_id) {			$sql = "INSERT INTO jobs_assignment (job_id, employee_id, assignment_date) 
                    VALUES (?, ?, ?)";		} else {			$sql = "UPDATE jobs_assignment 
                    SET job_id = ?, employee_id = ?, assignment_date = ? 
                    WHERE job_id = ?";			$params[] = $this->job_id;		}		$stmt = $dbh->prepare($sql);		$stmt->execute($params);	}	public function delete($dbh) {		$params = array($this->job_id);		$sql = "DELETE FROM jobs_assignment WHERE job_id = ?";		$stmt = $dbh->prepare($sql);		$stmt->execute($params);	}}